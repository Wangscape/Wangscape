<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8F51FF9E-FEFF-414F-9F5B-9F55B5C15679}</ProjectGuid>
    <RootNamespace>Wangscape</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="libnoise.props" />
    <Import Project="spotify-json.props" />
    <Import Project="double-conversion.props" />
    <Import Project="cpp_utils.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="libnoise.props" />
    <Import Project="spotify-json.props" />
    <Import Project="double-conversion.props" />
    <Import Project="cpp_utils.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="libnoise.props" />
    <Import Project="spotify-json.props" />
    <Import Project="double-conversion.props" />
    <Import Project="cpp_utils.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="libnoise.props" />
    <Import Project="spotify-json.props" />
    <Import Project="double-conversion.props" />
    <Import Project="cpp_utils.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)</AdditionalIncludeDirectories>
    </ClCompile>
    <PostBuildEvent>
      <Command>lib /NOLOGO /OUT:"$(TargetPath).lib" "$(ProjectDir)\$(Configuration)\*.obj"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Output lib for use in test project</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)</AdditionalIncludeDirectories>
    </ClCompile>
    <PostBuildEvent>
      <Command>lib /NOLOGO /OUT:"$(TargetPath).lib" "$(ProjectDir)\$(Configuration)\*.obj"</Command>
      <Message>Output lib for use in test project</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
    </Link>
    <PostBuildEvent>
      <Command>lib /NOLOGO /OUT:"$(TargetPath).lib" "$(ProjectDir)\$(Configuration)\*.obj"</Command>
      <Message>Output lib for use in test project</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>lib /NOLOGO /OUT:"$(TargetPath).lib" "$(ProjectDir)\$(Configuration)\*.obj"</Command>
      <Message>Output lib for use in test project</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="..\README.md" />
    <None Include="example\example.json" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="codecs\RectCodec.h" />
    <ClInclude Include="image\Image.h" />
    <ClInclude Include="noise\module\codecs\BitmapWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\LogarithmWrapperCodec.h" />
    <ClInclude Include="noise\module\Bitmap.h" />
    <ClInclude Include="noise\module\codecs\DivideWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ReciprocalWrapperCodec.h" />
    <ClInclude Include="noise\module\Divide.h" />
    <ClInclude Include="noise\module\Logarithm.h" />
    <ClInclude Include="noise\module\Reciprocal.h" />
    <ClInclude Include="tilegen\alpha\CalculatorDither.h" />
    <ClInclude Include="codecs\Vector2Codec.h" />
    <ClInclude Include="tilegen\DebugTilesetID.h" />
    <ClInclude Include="tilegen\ModuleGroupRole.h" />
    <ClInclude Include="tilegen\alpha\CalculatorTopTwo.h" />
    <ClInclude Include="BorderModuleGroupLocation.h" />
    <ClInclude Include="codecs\BorderModuleGroupLocationCodec.h" />
    <ClInclude Include="codecs\OptionsCodec.h" />
    <ClInclude Include="codecs\TerrainModuleGroupLocationCodec.h" />
    <ClInclude Include="codecs\TerrainSpecCodec.h" />
    <ClInclude Include="codecs\TileFormatCodec.h" />
    <ClInclude Include="common.h" />
    <ClInclude Include="Corners.h" />
    <ClInclude Include="logging\Appender.h" />
    <ClInclude Include="logging\ConsoleAppender.h" />
    <ClInclude Include="logging\FileAppender.h" />
    <ClInclude Include="logging\Level.h" />
    <ClInclude Include="logging\Logger.h" />
    <ClInclude Include="rogging\Logging.h" />
    <ClInclude Include="metaoutput\codecs\FilenamesCodec.h" />
    <ClInclude Include="metaoutput\codecs\TileCodec.h" />
    <ClInclude Include="metaoutput\codecs\TileLocationCodec.h" />
    <ClInclude Include="metaoutput\codecs\TilesetCodec.h" />
    <ClInclude Include="metaoutput\Filenames.h" />
    <ClInclude Include="metaoutput\MetaOutput.h" />
    <ClInclude Include="metaoutput\Tile.h" />
    <ClInclude Include="metaoutput\TileGroups.h" />
    <ClInclude Include="metaoutput\TileLocation.h" />
    <ClInclude Include="metaoutput\Tileset.h" />
    <ClInclude Include="noise\codecs\EncodedModuleGroupCodec.h" />
    <ClInclude Include="noise\ModuleGroup.h" />
    <ClInclude Include="noise\ModuleGroupContainer.h" />
    <ClInclude Include="noise\ModuleID.h" />
    <ClInclude Include="noise\module\codecs\AbsWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\AddWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\BillowWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\BlendWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\CacheWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\CheckerboardWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ClampWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\CornerCombinerBaseWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\CurveWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\CylindersWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\DisplaceWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ExpWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ExponentWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ForwardWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\GradientWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\InvertWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\MaxWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\MinWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ModuleCodecs.h" />
    <ClInclude Include="noise\module\codecs\MultiplyWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\NormLPQWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\PerlinWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\PowerWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\PowWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\QuadrantSelectorWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\RidgedMultiWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\RotatePointWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ScaleBiasWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\ScalePointWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\SelectWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\SpheresWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\TerraceWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\TranslatePointWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\TurbulenceWrapperCodec.h" />
    <ClInclude Include="noise\module\codecs\UniformTripleCodec.h" />
    <ClInclude Include="noise\module\codecs\VoronoiWrapperCodec.h" />
    <ClInclude Include="noise\module\Forward.h" />
    <ClInclude Include="noise\module\ModuleWithSources.h" />
    <ClInclude Include="noise\module\codecs\NoiseSourcesCodec.h" />
    <ClInclude Include="noise\module\ModulePtr.h" />
    <ClInclude Include="noise\module\UniformTriple.h" />
    <ClInclude Include="noise\module\WangscapeModules.h" />
    <ClInclude Include="noise\WangscapeNoiseCodecs.h" />
    <ClInclude Include="noise\module\Wrapper.h" />
    <ClInclude Include="noise\module\WrapperBase.h" />
    <ClInclude Include="noise\EncodedModuleGroup.h" />
    <ClInclude Include="noise\module\codecs\NoiseQualityCodec.h" />
    <ClInclude Include="noise\module\NoiseSources.h" />
    <ClInclude Include="noise\module\Pow.h" />
    <ClInclude Include="noise\module\CornerCombinerBase.h" />
    <ClInclude Include="noise\module\Exp.h" />
    <ClInclude Include="noise\module\Gradient.h" />
    <ClInclude Include="noise\module\NormLPQ.h" />
    <ClInclude Include="noise\RasterBase.h" />
    <ClInclude Include="noise\ModuleManager.h" />
    <ClInclude Include="noise\RasterImage.h" />
    <ClInclude Include="noise\RasterValues.h" />
    <ClInclude Include="noise\WangscapeNoise.h" />
    <ClInclude Include="OptionsPaths.h" />
    <ClInclude Include="TerrainModuleGroupLocation.h" />
    <ClInclude Include="Options.h" />
    <ClInclude Include="OptionsManager.h" />
    <ClInclude Include="noise\module\QuadrantSelector.h" />
    <ClInclude Include="tilegen\CartesianPower.h" />
    <ClInclude Include="tilegen\CartesianPowerIterator.h" />
    <ClInclude Include="TerrainImages.h" />
    <ClInclude Include="TerrainSpec.h" />
    <ClInclude Include="TileFormat.h" />
    <ClInclude Include="tilegen\CoordinatePacker.h" />
    <ClInclude Include="tilegen\alpha\CalculatorBase.h" />
    <ClInclude Include="tilegen\alpha\CalculatorLinear.h" />
    <ClInclude Include="tilegen\alpha\CalculatorMax.h" />
    <ClInclude Include="tilegen\alpha\CalculatorMode.h" />
    <ClInclude Include="tilegen\partition\TilePartitionerBase.h" />
    <ClInclude Include="tilegen\partition\TilePartitionerNoise.h" />
    <ClInclude Include="tilegen\partition\TilePartitionerSquares.h" />
    <ClInclude Include="tilegen\TileGenerator.h" />
    <ClInclude Include="tilegen\TilesetGenerator.h" />
    <ClInclude Include="ipow.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="image\Image.cpp" />
    <ClCompile Include="noise\module\codecs\BitmapWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\LogarithmWrapperCodec.cpp" />
    <ClCompile Include="noise\module\Bitmap.cpp" />
    <ClCompile Include="noise\module\codecs\DivideWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ReciprocalWrapperCodec.cpp" />
    <ClCompile Include="tilegen\alpha\CalculatorDither.cpp" />
    <ClCompile Include="tilegen\alpha\CalculatorMode.cpp" />
    <ClCompile Include="tilegen\alpha\CalculatorTopTwo.cpp" />
    <ClCompile Include="logging\ConsoleAppender.cpp" />
    <ClCompile Include="logging\FileAppender.cpp" />
    <ClCompile Include="logging\Logging.cpp" />
    <ClCompile Include="metaoutput\MetaOutput.cpp" />
    <ClCompile Include="metaoutput\Tile.cpp" />
    <ClCompile Include="metaoutput\TileLocation.cpp" />
    <ClCompile Include="metaoutput\Tileset.cpp" />
    <ClCompile Include="noise\ModuleGroup.cpp" />
    <ClCompile Include="noise\ModuleGroupContainer.cpp" />
    <ClCompile Include="noise\module\codecs\AbsWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\AddWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\BillowWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\BlendWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\CacheWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\CheckerboardWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ClampWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ConstWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\CornerCombinerBaseWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\CurveWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\CylindersWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\DisplaceWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ExponentWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ExpWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ForwardWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\GradientWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\InvertWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\MaxWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\MinWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\MultiplyWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\NormLPQWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\PerlinWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\PowerWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\PowWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\QuadrantSelectorWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\RidgedMultiWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\RotatePointWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ScaleBiasWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\ScalePointWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\SelectWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\SpheresWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\TerraceWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\TranslatePointWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\TurbulenceWrapperCodec.cpp" />
    <ClCompile Include="noise\module\codecs\VoronoiWrapperCodec.cpp" />
    <ClCompile Include="noise\module\ModuleWithSources.cpp" />
    <ClCompile Include="noise\EncodedModuleGroup.cpp" />
    <ClCompile Include="noise\module\CornerCombinerBase.cpp" />
    <ClCompile Include="noise\module\Wrapper.cpp" />
    <ClCompile Include="noise\module\WrapperBase.cpp" />
    <ClCompile Include="noise\module\NormLPQ.cpp" />
    <ClCompile Include="noise\RasterBase.cpp" />
    <ClCompile Include="noise\ModuleManager.cpp" />
    <ClCompile Include="noise\RasterImage.cpp" />
    <ClCompile Include="noise\RasterValues.cpp" />
    <ClCompile Include="Main.cpp" />
    <ClCompile Include="OptionsManager.cpp" />
    <ClCompile Include="noise\module\QuadrantSelector.cpp" />
    <ClCompile Include="OptionsPaths.cpp" />
    <ClCompile Include="TerrainImages.cpp" />
    <ClCompile Include="tilegen\alpha\CalculatorBase.cpp" />
    <ClCompile Include="tilegen\alpha\CalculatorLinear.cpp" />
    <ClCompile Include="tilegen\alpha\CalculatorMax.cpp" />
    <ClCompile Include="tilegen\DebugTilesetID.cpp" />
    <ClCompile Include="tilegen\partition\TilePartitionerBase.cpp" />
    <ClCompile Include="tilegen\partition\TilePartitionerNoise.cpp" />
    <ClCompile Include="tilegen\partition\TilePartitionerSquares.cpp" />
    <ClCompile Include="tilegen\TileGenerator.cpp" />
    <ClCompile Include="tilegen\TilesetGenerator.cpp" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="noise\module\codecs\ConstWrapperCodec.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\sfml-graphics.redist.2.4.0.0\build\native\sfml-graphics.redist.targets" Condition="Exists('..\packages\sfml-graphics.redist.2.4.0.0\build\native\sfml-graphics.redist.targets')" />
    <Import Project="..\packages\sfml-system.redist.2.4.0.0\build\native\sfml-system.redist.targets" Condition="Exists('..\packages\sfml-system.redist.2.4.0.0\build\native\sfml-system.redist.targets')" />
    <Import Project="..\packages\sfml-system.2.4.0.0\build\native\sfml-system.targets" Condition="Exists('..\packages\sfml-system.2.4.0.0\build\native\sfml-system.targets')" />
    <Import Project="..\packages\sfml-window.redist.2.4.0.0\build\native\sfml-window.redist.targets" Condition="Exists('..\packages\sfml-window.redist.2.4.0.0\build\native\sfml-window.redist.targets')" />
    <Import Project="..\packages\sfml-window.2.4.0.0\build\native\sfml-window.targets" Condition="Exists('..\packages\sfml-window.2.4.0.0\build\native\sfml-window.targets')" />
    <Import Project="..\packages\sfml-graphics.2.4.0.0\build\native\sfml-graphics.targets" Condition="Exists('..\packages\sfml-graphics.2.4.0.0\build\native\sfml-graphics.targets')" />
    <Import Project="..\packages\boost.1.64.0.0\build\native\boost.targets" Condition="Exists('..\packages\boost.1.64.0.0\build\native\boost.targets')" />
    <Import Project="..\packages\boost_chrono-vc140.1.64.0.0\build\native\boost_chrono-vc140.targets" Condition="Exists('..\packages\boost_chrono-vc140.1.64.0.0\build\native\boost_chrono-vc140.targets')" />
    <Import Project="..\packages\boost_filesystem-vc140.1.64.0.0\build\native\boost_filesystem-vc140.targets" Condition="Exists('..\packages\boost_filesystem-vc140.1.64.0.0\build\native\boost_filesystem-vc140.targets')" />
    <Import Project="..\packages\boost_program_options-vc140.1.64.0.0\build\native\boost_program_options-vc140.targets" Condition="Exists('..\packages\boost_program_options-vc140.1.64.0.0\build\native\boost_program_options-vc140.targets')" />
    <Import Project="..\packages\boost_system-vc140.1.64.0.0\build\native\boost_system-vc140.targets" Condition="Exists('..\packages\boost_system-vc140.1.64.0.0\build\native\boost_system-vc140.targets')" />
    <Import Project="..\packages\OpenBLAS.0.2.14.1\build\native\openblas.targets" Condition="Exists('..\packages\OpenBLAS.0.2.14.1\build\native\openblas.targets')" />
    <Import Project="..\packages\armadillo-code.7.800.2\build\native\armadillo-code.targets" Condition="Exists('..\packages\armadillo-code.7.800.2\build\native\armadillo-code.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\sfml-graphics.redist.2.4.0.0\build\native\sfml-graphics.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sfml-graphics.redist.2.4.0.0\build\native\sfml-graphics.redist.targets'))" />
    <Error Condition="!Exists('..\packages\sfml-system.redist.2.4.0.0\build\native\sfml-system.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sfml-system.redist.2.4.0.0\build\native\sfml-system.redist.targets'))" />
    <Error Condition="!Exists('..\packages\sfml-system.2.4.0.0\build\native\sfml-system.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sfml-system.2.4.0.0\build\native\sfml-system.targets'))" />
    <Error Condition="!Exists('..\packages\sfml-window.redist.2.4.0.0\build\native\sfml-window.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sfml-window.redist.2.4.0.0\build\native\sfml-window.redist.targets'))" />
    <Error Condition="!Exists('..\packages\sfml-window.2.4.0.0\build\native\sfml-window.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sfml-window.2.4.0.0\build\native\sfml-window.targets'))" />
    <Error Condition="!Exists('..\packages\sfml-graphics.2.4.0.0\build\native\sfml-graphics.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sfml-graphics.2.4.0.0\build\native\sfml-graphics.targets'))" />
    <Error Condition="!Exists('..\packages\boost.1.64.0.0\build\native\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost.1.64.0.0\build\native\boost.targets'))" />
    <Error Condition="!Exists('..\packages\boost_chrono-vc140.1.64.0.0\build\native\boost_chrono-vc140.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost_chrono-vc140.1.64.0.0\build\native\boost_chrono-vc140.targets'))" />
    <Error Condition="!Exists('..\packages\boost_filesystem-vc140.1.64.0.0\build\native\boost_filesystem-vc140.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost_filesystem-vc140.1.64.0.0\build\native\boost_filesystem-vc140.targets'))" />
    <Error Condition="!Exists('..\packages\boost_program_options-vc140.1.64.0.0\build\native\boost_program_options-vc140.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost_program_options-vc140.1.64.0.0\build\native\boost_program_options-vc140.targets'))" />
    <Error Condition="!Exists('..\packages\boost_system-vc140.1.64.0.0\build\native\boost_system-vc140.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost_system-vc140.1.64.0.0\build\native\boost_system-vc140.targets'))" />
    <Error Condition="!Exists('..\packages\OpenBLAS.0.2.14.1\build\native\openblas.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\OpenBLAS.0.2.14.1\build\native\openblas.targets'))" />
    <Error Condition="!Exists('..\packages\armadillo-code.7.800.2\build\native\armadillo-code.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\armadillo-code.7.800.2\build\native\armadillo-code.targets'))" />
  </Target>
</Project>